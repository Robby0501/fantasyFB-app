{"ast":null,"code":"var _jsxFileName = \"/Users/robbyulrich/fantasyFB-app/frontend/src/components/PlayerSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PlayerSearch() {\n  _s();\n  var _location$state;\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [allPlayers, setAllPlayers] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [selectedPlayers, setSelectedPlayers] = useState({});\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const leagueSettings = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.leagueSettings;\n  useEffect(() => {\n    // Initialize selectedPlayers based on leagueSettings\n    if (leagueSettings) {\n      const initialSelectedPlayers = {};\n      Object.entries(leagueSettings.starters).forEach(([position, count]) => {\n        initialSelectedPlayers[position] = Array(count).fill(null);\n      });\n      initialSelectedPlayers['BENCH'] = Array(leagueSettings.benchSpots).fill(null);\n      setSelectedPlayers(initialSelectedPlayers);\n    }\n  }, [leagueSettings]);\n  useEffect(() => {\n    fetch('http://127.0.0.1:5000/api/all-players').then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      console.log('API Response:', data);\n      const players = data.map(player => ({\n        ...player,\n        playerName: player.playerName,\n        position: player.position,\n        teamName: player.teamName\n      }));\n      const defenses = data.filter(player => player.position === 'DEF').map(defense => ({\n        playerName: `${defense.teamName} D/ST`,\n        position: 'DEF',\n        teamName: defense.teamName\n      }));\n      setAllPlayers([...players, ...defenses]);\n    }).catch(error => {\n      console.error('Error fetching players:', error);\n      setError('An error occurred while fetching players. Please try again later.');\n    });\n  }, []);\n  useEffect(() => {\n    if (searchQuery.length > 1) {\n      const results = allPlayers.filter(player => {\n        const searchableNames = [player.playerName, player.teamName, player.position].filter(Boolean);\n        return searchableNames.some(name => name.toLowerCase().includes(searchQuery.toLowerCase()));\n      });\n      setSearchResults(results.slice(0, 10));\n    } else {\n      setSearchResults([]);\n    }\n  }, [searchQuery, allPlayers]);\n  const addPlayer = player => {\n    let position = player.position.toLowerCase();\n    if (!position) {\n      console.warn(`Position not found for player: ${player.playerName}`);\n      position = 'flex';\n    }\n    setSelectedPlayers(prev => {\n      const newSelectedPlayers = {\n        ...prev\n      };\n\n      // Check if the player is already in the lineup\n      const isPlayerAlreadyAdded = Object.values(newSelectedPlayers).some(players => players.some(p => p && p.playerName === player.playerName));\n      if (isPlayerAlreadyAdded) {\n        console.warn(`Player ${player.playerName} is already in the lineup.`);\n        return prev;\n      }\n\n      // First, try to add to the exact position\n      if (newSelectedPlayers[position] && newSelectedPlayers[position].includes(null)) {\n        const index = newSelectedPlayers[position].indexOf(null);\n        newSelectedPlayers[position][index] = player;\n      } else {\n        // If exact position is full or doesn't exist, try to add to a compatible position\n        let added = false;\n        for (const [key, players] of Object.entries(newSelectedPlayers)) {\n          if (isCompatiblePosition(position, key) && players.includes(null)) {\n            const index = players.indexOf(null);\n            newSelectedPlayers[key][index] = player;\n            added = true;\n            break;\n          }\n        }\n\n        // If still not added, try to add to FLEX or BENCH\n        if (!added) {\n          if (newSelectedPlayers['FLEX'] && newSelectedPlayers['FLEX'].includes(null)) {\n            const index = newSelectedPlayers['FLEX'].indexOf(null);\n            newSelectedPlayers['FLEX'][index] = player;\n          } else if (newSelectedPlayers['BENCH'] && newSelectedPlayers['BENCH'].includes(null)) {\n            const index = newSelectedPlayers['BENCH'].indexOf(null);\n            newSelectedPlayers['BENCH'][index] = player;\n          } else {\n            console.warn(`No available slots for player: ${player.playerName}`);\n            return prev;\n          }\n        }\n      }\n      return newSelectedPlayers;\n    });\n    setSearchQuery(\"\");\n    setSearchResults([]);\n  };\n  const isCompatiblePosition = (playerPosition, slotPosition) => {\n    var _positionMap$playerPo;\n    const positionMap = {\n      'qb': ['qb'],\n      'rb': ['rb', 'flex'],\n      'wr': ['wr', 'flex'],\n      'te': ['te', 'flex'],\n      'k': ['k'],\n      'def': ['def']\n    };\n    return ((_positionMap$playerPo = positionMap[playerPosition]) === null || _positionMap$playerPo === void 0 ? void 0 : _positionMap$playerPo.includes(slotPosition.toLowerCase())) || false;\n  };\n  const removePlayer = (position, index) => {\n    setSelectedPlayers(prev => {\n      const newSelectedPlayers = {\n        ...prev\n      };\n      newSelectedPlayers[position][index] = null;\n      return newSelectedPlayers;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-search\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search and Add Players\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value),\n        placeholder: \"Search players\",\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-results\",\n        children: searchResults.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-result-item\",\n          onClick: () => addPlayer(player),\n          children: [player.playerName, \" - \", player.position, \" - \", player.teamName]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 3\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Lineup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lineup\",\n      children: Object.entries(selectedPlayers).map(([position, players]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"position-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: position\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), players.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-slot\",\n          children: player ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [player.playerName, \" - \", player.position, \" - \", player.teamName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removePlayer(position, index),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Empty Slot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 19\n          }, this)\n        }, `${position}-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }, this))]\n      }, position, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n_s(PlayerSearch, \"lPhymWqo6stsY9WrPBO95sujFeE=\", false, function () {\n  return [useLocation];\n});\n_c = PlayerSearch;\nexport default PlayerSearch;\nvar _c;\n$RefreshReg$(_c, \"PlayerSearch\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","PlayerSearch","_s","_location$state","searchQuery","setSearchQuery","allPlayers","setAllPlayers","searchResults","setSearchResults","selectedPlayers","setSelectedPlayers","error","setError","location","leagueSettings","state","initialSelectedPlayers","Object","entries","starters","forEach","position","count","Array","fill","benchSpots","fetch","then","response","ok","Error","status","json","data","console","log","players","map","player","playerName","teamName","defenses","filter","defense","catch","length","results","searchableNames","Boolean","some","name","toLowerCase","includes","slice","addPlayer","warn","prev","newSelectedPlayers","isPlayerAlreadyAdded","values","p","index","indexOf","added","key","isCompatiblePosition","playerPosition","slotPosition","_positionMap$playerPo","positionMap","removePlayer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/robbyulrich/fantasyFB-app/frontend/src/components/PlayerSearch.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nfunction PlayerSearch() {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [allPlayers, setAllPlayers] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [selectedPlayers, setSelectedPlayers] = useState({});\n  const [error, setError] = useState(null);\n\n  const location = useLocation(); \n  const leagueSettings = location.state?.leagueSettings;\n\n  useEffect(() => {\n    // Initialize selectedPlayers based on leagueSettings\n    if (leagueSettings) {\n      const initialSelectedPlayers = {};\n      Object.entries(leagueSettings.starters).forEach(([position, count]) => {\n        initialSelectedPlayers[position] = Array(count).fill(null);\n      });\n      initialSelectedPlayers['BENCH'] = Array(leagueSettings.benchSpots).fill(null);\n      setSelectedPlayers(initialSelectedPlayers);\n    }\n  }, [leagueSettings]);\n\n  useEffect(() => {\n    fetch('http://127.0.0.1:5000/api/all-players')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(data => {\n        console.log('API Response:', data);\n        const players = data.map(player => ({\n          ...player,\n          playerName: player.playerName,\n          position: player.position,\n          teamName: player.teamName\n        }));\n        const defenses = data\n          .filter(player => player.position === 'DEF')\n          .map(defense => ({\n            playerName: `${defense.teamName} D/ST`,\n            position: 'DEF',\n            teamName: defense.teamName\n          }));\n        setAllPlayers([...players, ...defenses]);\n      })\n      .catch(error => {\n        console.error('Error fetching players:', error);\n        setError('An error occurred while fetching players. Please try again later.');\n      });\n  }, []);\n\n  useEffect(() => {\n    if (searchQuery.length > 1) {\n      const results = allPlayers.filter(player => {\n        const searchableNames = [\n          player.playerName,\n          player.teamName,\n          player.position\n        ].filter(Boolean);\n        return searchableNames.some(name =>\n          name.toLowerCase().includes(searchQuery.toLowerCase())\n        );\n      });\n      setSearchResults(results.slice(0, 10));\n    } else {\n      setSearchResults([]);\n    }\n  }, [searchQuery, allPlayers]);\n\n  const addPlayer = (player) => {\n    let position = player.position.toLowerCase();\n    \n    if (!position) {\n      console.warn(`Position not found for player: ${player.playerName}`);\n      position = 'flex';\n    }\n  \n    setSelectedPlayers(prev => {\n      const newSelectedPlayers = {...prev};\n      \n      // Check if the player is already in the lineup\n      const isPlayerAlreadyAdded = Object.values(newSelectedPlayers).some(\n        players => players.some(p => p && p.playerName === player.playerName)\n      );\n\n      if (isPlayerAlreadyAdded) {\n        console.warn(`Player ${player.playerName} is already in the lineup.`);\n        return prev;\n      }\n\n      // First, try to add to the exact position\n      if (newSelectedPlayers[position] && newSelectedPlayers[position].includes(null)) {\n        const index = newSelectedPlayers[position].indexOf(null);\n        newSelectedPlayers[position][index] = player;\n      } else {\n        // If exact position is full or doesn't exist, try to add to a compatible position\n        let added = false;\n        for (const [key, players] of Object.entries(newSelectedPlayers)) {\n          if (isCompatiblePosition(position, key) && players.includes(null)) {\n            const index = players.indexOf(null);\n            newSelectedPlayers[key][index] = player;\n            added = true;\n            break;\n          }\n        }\n\n        // If still not added, try to add to FLEX or BENCH\n        if (!added) {\n          if (newSelectedPlayers['FLEX'] && newSelectedPlayers['FLEX'].includes(null)) {\n            const index = newSelectedPlayers['FLEX'].indexOf(null);\n            newSelectedPlayers['FLEX'][index] = player;\n          } else if (newSelectedPlayers['BENCH'] && newSelectedPlayers['BENCH'].includes(null)) {\n            const index = newSelectedPlayers['BENCH'].indexOf(null);\n            newSelectedPlayers['BENCH'][index] = player;\n          } else {\n            console.warn(`No available slots for player: ${player.playerName}`);\n            return prev;\n          }\n        }\n      }\n\n      return newSelectedPlayers;\n    });\n\n    setSearchQuery(\"\");\n    setSearchResults([]);\n  };\n\n  const isCompatiblePosition = (playerPosition, slotPosition) => {\n    const positionMap = {\n      'qb': ['qb'],\n      'rb': ['rb', 'flex'],\n      'wr': ['wr', 'flex'],\n      'te': ['te', 'flex'],\n      'k': ['k'],\n      'def': ['def']\n    };\n\n    return positionMap[playerPosition]?.includes(slotPosition.toLowerCase()) || false;\n  };\n\n  const removePlayer = (position, index) => {\n    setSelectedPlayers(prev => {\n      const newSelectedPlayers = {...prev};\n      newSelectedPlayers[position][index] = null;\n      return newSelectedPlayers;\n    });\n  };\n\n  return (\n    <div className=\"player-search\">\n      <h2>Search and Add Players</h2>\n      <div className=\"search-container\">\n        <input \n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n          placeholder=\"Search players\"\n          className=\"search-input\"\n        />\n        {searchResults.length > 0 && (\n  <div className=\"search-results\">\n    {searchResults.map((player, index) => (\n  <div key={index} className=\"search-result-item\" onClick={() => addPlayer(player)}>\n    {player.playerName} - {player.position} - {player.teamName}\n  </div>\n))}\n          </div>\n        )}\n      </div>\n      {error && <p className=\"error-message\">{error}</p>}\n      <h2>Your Lineup</h2>\n      <div className=\"lineup\">\n        {Object.entries(selectedPlayers).map(([position, players]) => (\n          <div key={position} className=\"position-group\">\n            <h3>{position}</h3>\n            {players.map((player, index) => (\n              <div key={`${position}-${index}`} className=\"player-slot\">\n                {player ? (\n                  <>\n                    <span>{player.playerName} - {player.position} - {player.teamName}</span>\n                    <button onClick={() => removePlayer(position, index)}>Remove</button>\n                  </>\n                ) : (\n                  <span>Empty Slot</span>\n                )}\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default PlayerSearch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}